{"version":3,"sources":["assets/double-bubble-outline.png","components/Header.tsx","components/Label.tsx","components/TextInput.tsx","components/Button.tsx","components/Modal/Portal.tsx","components/Modal/Backdrop.tsx","components/Modal/Modal.tsx","components/Modal/CloseButton.tsx","components/Modal/ModalHeader.tsx","components/Modal/ModalContent.tsx","components/Modal/ModalFooter.tsx","components/Modal/index.ts","components/Modal/ModalContainer.tsx","components/Checkbox.tsx","components/ColorsModal.tsx","Main.tsx","index.tsx"],"names":["module","exports","StyledHeader","styled","header","Title","h1","SquareDetail","div","Header","StyledLabel","label","Label","inputId","children","htmlFor","Input","input","TextInput","id","name","type","autoComplete","StyledButton","button","lighten","Button","onClick","Portal","mountId","mount","document","getElementById","createPortal","Overlay","Backdrop","ALIGNMENTS","Wrapper","Modal","className","role","aria-labelledby","aria-describedby","CloseButton","align","LEFT","close","aria-label","RIGHT","Content","main","Footer","footer","onClickOutside","onEscapeKey","React","Children","map","child","cloneElement","data-autofocus-inside","Checkbox","value","ColorsModal","colors","onClose","onSubmit","useState","modalColors","setModalColors","onClickCheckbox","temp","Array","from","push","Container","MainContent","Form","form","NoSelectionText","p","Colors","Main","modal","setModal","setColors","length","join","GlobalStyle","createGlobalStyle","BackgroundPattern","ReactDOM","render"],"mappings":"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","file":"static/js/main.08589548.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/double-bubble-outline.cdeb83f7.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header: React.FunctionComponent = () => {\n  return (\n    <StyledHeader>\n      <Title>\n        Easy accessibility <span>with</span> React-Focus-On\n      </Title>\n      <SquareDetail />\n    </StyledHeader>\n  );\n};\n\nconst StyledHeader = styled.header`\n  align-content: center;\n  border-bottom: 1px solid var(--primary-accent);\n  display: flex;\n  margin: 0 auto;\n  max-width: 70%;\n  padding: 1rem;\n  position: relative;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-family: var(--primary-font);\n  font-size: 2rem;\n  font-weight: 700;\n  line-height: 1;\n  max-width: 420px;\n  -webkit-text-stroke-color: var(--primary-dark);\n  -webkit-text-stroke-width: 0.5px;\n  text-transform: uppercase;\n\n  span {\n    color: var(--primary-accent);\n    -webkit-text-stroke: 0;\n  }\n`;\n\nconst SquareDetail = styled.div`\n  background: var(--primary-accent);\n  bottom: 0;\n  height: 25px;\n  position: absolute;\n  right: 0;\n  width: 25px;\n`;\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ILabelProps {\n  inputId: string;\n}\n\nconst Label: React.FunctionComponent<ILabelProps> = ({ inputId, children }) => {\n  return <StyledLabel htmlFor={inputId}>{children}</StyledLabel>;\n};\n\nconst StyledLabel = styled.label`\n  display: block;\n  text-transform: uppercase;\n`;\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ITextInputProps {\n  id: string;\n  name: string;\n}\n\nconst TextInput: React.FunctionComponent<ITextInputProps> = ({ id, name }) => {\n  return <Input type='text' name={name} id={id} autoComplete='off' />;\n};\n\nconst Input = styled.input`\n  border: 1px solid #ababab;\n  display: block;\n  padding: 0.5rem 0.5rem;\n  transition: background 0.3s ease;\n  width: 100%;\n\n  :focus {\n    border-color: var(--primary-accent);\n  }\n`;\n\nexport default TextInput;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { lighten } from 'polished';\n\ninterface IButtonProps {\n  onClick: () => void;\n}\n\nconst Button: React.FunctionComponent<IButtonProps> = ({\n  onClick,\n  children\n}) => {\n  return (\n    <StyledButton type='button' onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button`\n  background: var(--primary-accent);\n  border: 0;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  font-size: 0.75rem;\n  min-width: 125px;\n  padding: 0.5rem;\n  text-align: center;\n  text-transform: uppercase;\n  transition: background 0.3s ease;\n\n  :focus,\n  :hover {\n    background: ${lighten(0.2, '#2274A5')};\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface Props {\n  mountId?: string;\n}\n\nconst Portal: React.FC<Props> = ({ mountId = 'root', children }) => {\n  const mount: HTMLElement | null = document.getElementById(mountId);\n\n  return mount && createPortal(children, mount);\n};\n\nexport default Portal;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Backdrop: React.FC = () => <Overlay />;\n\nconst Overlay = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  bottom: 0;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n`;\n\nexport default Backdrop;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  className?: string;\n}\n\nconst Modal: React.FC<Props> = ({ className, children }) => {\n  return (\n    <Wrapper\n      className={className}\n      role='dialog'\n      aria-labelledby='modal-header'\n      aria-describedby='modal-content'\n    >\n      {children}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  background: #fff;\n  border: 1px solid #999;\n  border-radius: 5px;\n  box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.5);\n  display: grid;\n  grid-template-areas:\n    'header'\n    'content'\n    'footer';\n  grid-template-rows: min-content auto min-content;\n  height: 300px;\n  left: 50%;\n  max-width: 500px;\n  position: absolute;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n`;\n\nexport default Modal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport CloseIcon from '@material-ui/icons/Close';\n\nenum ALIGNMENTS {\n  LEFT = 'left',\n  RIGHT = 'right'\n}\n\ninterface Props {\n  align?: ALIGNMENTS.LEFT | ALIGNMENTS.RIGHT;\n  close?: () => void;\n}\n\nexport const CloseButton: React.FC<Props> = ({\n  align = ALIGNMENTS.LEFT,\n  close\n}) => {\n  return (\n    <Button align={align} onClick={close} aria-label='Close'>\n      <CloseIcon />\n    </Button>\n  );\n};\n\nconst Button = styled.button<{ align: ALIGNMENTS.LEFT | ALIGNMENTS.RIGHT }>`\n  align-content: center;\n  background: transparent;\n  border: 1px solid transparent;\n  border-radius: 50%;\n  box-shadow: 0;\n  cursor: pointer;\n  display: flex;\n  left: ${({ align }) => align === ALIGNMENTS.LEFT && 0};\n  justify-content: center;\n  margin: 0 0.5rem;\n  padding: 0.25rem;\n  position: absolute;\n  right: ${({ align }) => align === ALIGNMENTS.RIGHT && 0};\n  top: 50%;\n  transform: translateY(-50%);\n  transition: border 0.2s ease;\n\n  &:focus {\n    border: 1px solid #333;\n    outline: 0;\n  }\n\n  svg {\n    height: 22px;\n    width: 22px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { CloseButton } from './CloseButton';\n\ntype Alignments = 'left' | 'center' | 'right';\ninterface Props {\n  className?: string;\n  align?: Alignments;\n  close?: () => void;\n}\n\nexport const ModalHeader: React.FC<Props> = ({\n  className,\n  align = 'left',\n  close,\n  children\n}) => {\n  return (\n    <Header id='modal-header' className={className} align={align}>\n      <CloseButton close={close} />\n      {children}\n    </Header>\n  );\n};\n\nconst Header = styled.header<{ align: Alignments }>`\n  border-bottom: 1px solid #999;\n  grid-area: header;\n  padding: 0.25rem 3rem;\n  position: relative;\n  text-align: ${({ align }) => align};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  className?: string;\n}\n\nexport const ModalContent: React.FC<Props> = ({ className, children }) => {\n  return (\n    <Content id='modal-content' className={className} data-autofocus-inside>\n      {children}\n    </Content>\n  );\n};\n\nconst Content = styled.main`\n  background: #efefef;\n  grid-area: content;\n  padding: 1rem;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  className?: string;\n}\n\nexport const ModalFooter: React.FC<Props> = ({ className, children }) => {\n  return (\n    <Footer className={className} data-autofocus-inside>\n      {children}\n    </Footer>\n  );\n};\n\nconst Footer = styled.footer`\n  align-content: center;\n  align-items: center;\n  border-top: 1px solid #999;\n  display: flex;\n  grid-area: footer;\n  justify-content: center;\n  min-height: 3rem;\n  padding: 0.25rem 2rem;\n  position: relative;\n`;\n","import { ModalContainer } from \"./ModalContainer\";\nimport { ModalHeader } from \"./ModalHeader\";\nimport { ModalContent } from \"./ModalContent\";\nimport { ModalFooter } from \"./ModalFooter\";\n\nexport default {\n  Container: ModalContainer,\n  Header: ModalHeader,\n  Content: ModalContent,\n  Footer: ModalFooter,\n};\n","import React from \"react\";\nimport { FocusOn } from \"react-focus-on\";\n\nimport Portal from \"./Portal\";\nimport Backdrop from \"./Backdrop\";\nimport Modal from \"./Modal\";\n\ninterface Props {\n  className?: string;\n  close: () => void;\n}\n\nexport const ModalContainer: React.FC<Props> = ({\n  className,\n  close,\n  children,\n}) => {\n  return (\n    <Portal>\n      <Backdrop />\n      <FocusOn onClickOutside={close} onEscapeKey={close}>\n        <Modal className={className}>\n          {React.Children.map(children as React.ReactElement[], function (\n            child: React.ReactElement\n          ) {\n            return child && React.cloneElement(child, { close });\n          })}\n        </Modal>\n      </FocusOn>\n    </Portal>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ICheckboxProps {\n  id: string;\n  label: string;\n  onClick: () => void;\n}\n\nconst Checkbox: React.FunctionComponent<ICheckboxProps> = ({\n  id,\n  label,\n  onClick\n}) => {\n  return (\n    <span>\n      <Input id={id} type='checkbox' value={label} onClick={onClick} />\n      <label htmlFor={id}>{label}</label>\n    </span>\n  );\n};\n\nconst Input = styled.input`\n  opacity: 0;\n  position: absolute;\n\n  & + label {\n    position: relative;\n    cursor: pointer;\n    padding: 0;\n  }\n\n  & + label:before {\n    content: '';\n    margin-right: 10px;\n    display: inline-block;\n    vertical-align: text-top;\n    width: 20px;\n    height: 20px;\n    background: white;\n  }\n\n  &:focus + label:before {\n    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.12);\n  }\n\n  &:checked + label:before {\n    background: var(--primary-accent);\n  }\n\n  &:disabled + label {\n    color: #b8b8b8;\n    cursor: auto;\n  }\n\n  &:disabled + label:before {\n    box-shadow: none;\n    background: #ddd;\n  }\n\n  &:checked + label:after {\n    content: '';\n    position: absolute;\n    left: 5px;\n    top: 9px;\n    background: white;\n    width: 2px;\n    height: 2px;\n    box-shadow: 2px 0 0 white, 4px 0 0 white, 4px -2px 0 white, 4px -4px 0 white,\n      4px -6px 0 white, 4px -8px 0 white;\n    transform: rotate(45deg);\n  }\n`;\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Modal from \"./Modal\";\nimport Button from \"./Button\";\nimport Checkbox from \"./Checkbox\";\n\ninterface IColorsModalProps {\n  colors: string[];\n  onClose: () => void;\n  onSubmit: (color: string[]) => void;\n}\n\nconst ColorsModal: React.FC<IColorsModalProps> = ({\n  colors,\n  onClose,\n  onSubmit,\n}) => {\n  const [modalColors, setModalColors] = useState<string[]>(colors);\n\n  const onClickCheckbox = (value: string) => {\n    const temp: string[] = Array.from(modalColors);\n    temp.push(value);\n    setModalColors(temp);\n  };\n\n  return (\n    <Modal.Container close={onClose}>\n      <Modal.Header align=\"left\">\n        <h1>Pick your favorite colors</h1>\n      </Modal.Header>\n      <Content>\n        <Checkbox\n          id=\"blue\"\n          label=\"Blue\"\n          onClick={() => onClickCheckbox(\"blue\")}\n        />\n        <Checkbox\n          id=\"green\"\n          label=\"Green\"\n          onClick={() => onClickCheckbox(\"green\")}\n        />\n        <Checkbox id=\"red\" label=\"Red\" onClick={() => onClickCheckbox(\"red\")} />\n        <Checkbox\n          id=\"orange\"\n          label=\"Orange\"\n          onClick={() => onClickCheckbox(\"orange\")}\n        />\n        <Checkbox\n          id=\"teal\"\n          label=\"Teal\"\n          onClick={() => onClickCheckbox(\"teal\")}\n        />\n        <Checkbox\n          id=\"black\"\n          label=\"Black\"\n          onClick={() => onClickCheckbox(\"black\")}\n        />\n        <Checkbox\n          id=\"pink\"\n          label=\"Pink\"\n          onClick={() => onClickCheckbox(\"pink\")}\n        />\n        <Checkbox\n          id=\"beige\"\n          label=\"Beige\"\n          onClick={() => onClickCheckbox(\"beige\")}\n        />\n        <Checkbox\n          id=\"maroon\"\n          label=\"Maroon\"\n          onClick={() => onClickCheckbox(\"maroon\")}\n        />\n        <Checkbox\n          id=\"grey\"\n          label=\"Grey\"\n          onClick={() => onClickCheckbox(\"grey\")}\n        />\n      </Content>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            onSubmit(modalColors);\n            onClose();\n          }}\n        >\n          Submit colors\n        </Button>\n      </Modal.Footer>\n    </Modal.Container>\n  );\n};\n\nconst Content = styled(Modal.Content)`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n`;\n\nexport default ColorsModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Header from './components/Header';\nimport Label from './components/Label';\nimport TextInput from './components/TextInput';\nimport Button from './components/Button';\nimport ColorsModal from './components/ColorsModal';\n\nconst Main = () => {\n  const [modal, setModal] = useState<boolean>(false);\n  const [colors, setColors] = useState<string[]>([]);\n\n  return (\n    <Container>\n      {modal && (\n        <ColorsModal\n          colors={colors}\n          onClose={() => setModal(false)}\n          onSubmit={setColors}\n        />\n      )}\n      <Header />\n      <MainContent>\n        <Form>\n          <div>\n            <Label inputId='name'>Name</Label>\n            <TextInput name='name' id='name' />\n          </div>\n          <div>\n            <Label inputId='name'>Favorite Color(s)</Label>\n            {!colors.length && (\n              <NoSelectionText>No colors selected</NoSelectionText>\n            )}\n            {!!colors.length && <Colors>{colors.join(', ')}</Colors>}\n            <Button onClick={() => setModal(true)}>View colors</Button>\n          </div>\n        </Form>\n      </MainContent>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  align-items: center;\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst MainContent = styled.main`\n  background: white;\n  border: 1px solid #dedede;\n  margin: 2rem auto;\n  max-width: 70%;\n  padding: 1rem;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: 1fr;\n  width: 100%;\n`;\n\nconst NoSelectionText = styled.p`\n  color: var(--secondary-dark);\n  font-size: 0.85rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Colors = styled.p`\n  margin-bottom: 0.5rem;\n  text-transform: capitalize;\n`;\n\nexport default Main;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport Main from \"./Main\";\n\nimport BackgroundPattern from \"assets/double-bubble-outline.png\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --primary-accent: #2274a5;\n    --primary-dark: #2f2d2e;\n    --primary-font: 'Barlow', sans-serif;\n    --primary-light: #f0f3f5;\n    --secondary-dark: #787878;\n  }\n\n  * {\n    border: 0;\n    box-sizing: border-box;\n    font-size: 100%;\n    margin: 0;\n    padding: 0;\n\t  vertical-align: baseline\n  }\n  html, body {\n    -webkit-font-smoothing: antialiased;\n    -webkit-text-size-adjust: none;\n    background: url(${BackgroundPattern});\n    backface-visibility: hidden;\n    border-bottom: 0;\n    color: var(---primary-dark);\n    font-family: var(---primary-font);\n    font-size: min(max(15px, 2vw), 18px);\n    font-weight: 400;\n    line-height: 1.75;\n    min-height: 100vh;\n  }\n\n  *:focus {\n    outline: 1px solid var(---primary-accent);\n  }\n  img {\n    border: 0;\n    height: auto;\n    max-width: 100%;\n  }\n  ul, li {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  a,\n  a:visited,\n  a:active {\n    color: var(---primary-accent);\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n`;\n\nReactDOM.render(\n  <Fragment>\n    <GlobalStyle />\n    <Main />\n  </Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}